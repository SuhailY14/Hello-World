# .github/workflows/logger.yaml
name: Code Commit PreProcessing
on:
  push:
    branches-ignore:
      - main

jobs:
  author-verification:
    name: "infoblox commit author check"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
           python-version: '3.8.10'
      - name: Install python dependencies
        run: |
          pip install requests
      - name: Install import dependencies
        run: |
          pip3 install requests-html
          pip3 install GitPython
          pip3 install sh
      - name: pusher eamil check
        run: |
          export DOMAIN_ID=$(python .github/scm_scripts/pusher_email_check.py '${{ github.event.pusher.email }}')
          echo "The name of the pusher: ${{ github.event.pusher.name }}"
          echo "The email of the pusher: ${{ github.event.pusher.email }}"

      - name: View the github context
        run: echo "$GITHUB_CONTEXT.author.email"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          
  file_contents:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Check for non-ascii characters
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: eprot $(python .github/scm_scripts//content_check.py '${{ github.event.file.content }}')
      - name: File contents
        run: echo "${ steps.read_file.outputs.contents }"

  github-preprocessing:
    name: "Code Commit Compliance Check"
    runs-on: ubuntu-latest
    needs: author-verification
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
           python-version: '3.8.10'
      - name: Install python dependencies
        run: |
          pip install requests
      - name: Commit Title Check
        env:
          TICKET_ID: Dummy_field
        run: |
          export TICKET_ID=$(python .github/scm_scripts/title_check.py '${{ github.event.head_commit.message }}')
          echo "TICKET_ID=$TICKET_ID" >> $GITHUB_ENV
      - name: Version1 Check
        env:
          V1_TOKEN: ${{ secrets.V1_TOKEN }}
        if: success() && (startsWith( env.TICKET_ID, 'TK-') || startsWith(env.TICKET_ID, 'B-'))
        run: |
          echo "V1 TICKE ID = ${{ env.TICKET_ID }}"
          python .github/scm_scripts/version_one_check.py "${{ env.TICKET_ID }}" "${{ env.V1_TOKEN }}"
      - name: JIRA Check
        env:
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
        if: success() && (!startsWith(env.TICKET_ID, 'TK-') && !startsWith(env.TICKET_ID, 'B-'))
        run: |
          echo "JIRA TICKE ID = ${{ env.TICKET_ID }}"
          python .github/scm_scripts/jira_check.py "${{ env.TICKET_ID }}" "${{ env.JIRA_TOKEN }}"
